# 1. List all actors
SELECT * FROM actor;

# 2. Find the surname of the actor with the forename 'John'. = Suvari
SELECT * FROM actor WHERE first_name = 'John';

# 3. Find all actors with surname 'Neeson' = Christian, Jayne
SELECT * FROM actor WHERE last_name = 'Neeson';

# 4. Find all actors with ID numbers divisible by 10
SELECT * FROM actor WHERE actor_id % 10 = 0;

# 5. What is the description of the movie with an ID of 100? = A beautiful drama of a dentist...
SELECT film_id, description FROM film WHERE film_id = 100;

# 6. Find every R-rated movie = 195 movies
SELECT * FROM film WHERE rating = 'R';

# 7. Find every non-R-rated movie = 805 movies
SELECT * FROM film WHERE rating != 'R';

# 8. Find the ten shortest movies
SELECT title, length FROM film ORDER BY length LIMIT 10;

# 9. Find all the movies with the longest runtime, without using LIMIT
SELECT title, length FROM film ORDER BY length DESC;

# 10. Find all the movies that have deleted scenes
SELECT * FROM film WHERE special_features LIKE 'Deleted Scenes%';

# 11. Using HAVING, reverse-alphabetically list the last names that are not repeated
SELECT last_name FROM actor GROUP BY last_name HAVING COUNT(*) = 1 ORDER BY last_name DESC;

# 12. Using HAVING, list the last names that appear more than once, from highest to lowest frequency
SELECT last_name FROM actor GROUP BY last_name HAVING COUNT(last_name) > 1 ORDER BY COUNT(*) DESC;

# 13. Which actor has appeared in the most films? Gina Degeneres
SELECT film_actor.actor_id, actor.first_name, actor.last_name FROM actor
JOIN film_actor ON actor.actor_id = film_actor.actor_id
GROUP BY film_actor.actor_id ORDER BY COUNT(film_actor.actor_id) DESC Limit 1;

# 14. When is academy dinosaur due? -- Too scary

# 15. What is the average runtime of all films? 115.2720
SELECT AVG(length) FROM film;

# 16. List the average runtime for every film category (this one was scary)
SELECT category.category_id, category.name, category.last_update, film_category.film_id, film_category.category_id, 
film_category.last_update, film.film_id, film.last_update, film.length FROM category 
INNER JOIN film_category ON category.category_id = film_category.category_id
INNER JOIN film ON film_category.film_id = film.film_id
GROUP BY category.name ORDER BY AVG(length);

# 17. List all the movies featuring a robot = 77 results
SELECT film_id, title, description FROM film WHERE description LIKE '%Robot%';

# 18. How many movies were released in 2010? = 0
SELECT COUNT(film_id) FROM film WHERE release_year = '2010';

# 19. Find the titles of all the horror movies = 56 Horror movies
SELECT category.category_id, category.name, category.last_update, film_category.film_id, film_category.category_id, 
film_category.last_update, film.film_id, film.title, film.last_update FROM category 
INNER JOIN film_category ON category.category_id = film_category.category_id
INNER JOIN film ON film_category.film_id = film.film_id
WHERE category.name LIKE 'Horror%';

# 20. List the full name of the staff member with the ID of 2 = Jon Stephens
SELECT staff_id, first_name, last_name FROM staff WHERE staff_id = 2;

# 21. List all the movies that Fred Costner has appeared in
SELECT actor.actor_id, actor.first_name, actor.last_name, film_actor.actor_id, film_actor.film_id, film.film_id, film.title 
FROM actor INNER JOIN film_actor ON actor.actor_id = film_actor.actor_id
INNER JOIN film ON film_actor.film_id = film.film_id
WHERE actor.last_name LIKE 'Costner%';

# 22. How many distinct countries are there? 109
SELECT * FROM country;

# 23. List the name of every language in reverse-alphabetical order
SELECT name FROM language ORDER BY name DESC;

# 24. List the full names of every actor whos surname ends with '-son' in alphabetical by forename
SELECT first_name, last_name FROM actor WHERE last_name LIKE '%son';

# 25. Which category contains the most films? (Not quite cracked this one)
SELECT category.category_id, category.name, category.last_update, film_category.film_id, film_category.category_id, 
film_category.last_update, film.film_id, film.last_update FROM category 
INNER JOIN film_category ON category.category_id = film_category.category_id
INNER JOIN film ON film_category.film_id = film.film_id
GROUP BY film.film_id ORDER BY COUNT(film_category.category_id);